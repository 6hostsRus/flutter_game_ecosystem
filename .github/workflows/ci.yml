name: CI

on:
     push:
          branches: [main, develop, 'refactor/**', 'feat/**', 'chore/**']
     pull_request:
          branches: ['**']

jobs:
     build-analyze-test-validate:
          name: Flutter + Melos + Schema Validator
          runs-on: ubuntu-latest

          steps:
               - name: Checkout
                 uses: actions/checkout@v4

               # Flutter includes Dart; weâ€™ll use it for melos & the validator.
               - name: Set up Flutter
                 uses: subosito/flutter-action@v2
                 with:
                      channel: stable
                      cache: true

               - name: Dart Pub cache path
                 run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

               - name: Activate Melos
                 run: dart pub global activate melos

               - name: Bootstrap workspace
                 run: melos bootstrap

               # Optional: enforce formatting; fail if changes are needed.
               - name: Format check
                 run: melos run format -- --set-exit-if-changed

               - name: Analyze
                 run: melos run analyze

               - name: Test
                 run: melos run test

               - name: Collect coverage (aggregate)
                 run: |
                      flutter test --coverage
                      # Merge per-package coverage files if present
                      dart run tools/merge_coverage.dart || true

               - name: Stub parity check
                 run: dart run tools/check_stub_parity.dart && echo "STUB_PARITY_OK=1" >> $GITHUB_ENV

               - name: Package status audit (non-blocking)
                 run: dart run tools/package_status_audit.dart

               - name: Route registry spec check
                 run: dart run tools/check_route_registry.dart
               - name: Route spec hash (strict)
                 run: dart run tools/check_spec_hashes.dart --strict

               - name: Update metrics doc
                 run: dart run tools/update_metrics.dart

               - name: Commit metrics update
                 if: github.event_name == 'push'
                 run: |
                      if [[ -n $(git status --porcelain docs/METRICS.md) ]]; then
                        git config user.name 'ci-bot'
                        git config user.email 'ci-bot@users.noreply.github.com'
                        git add docs/METRICS.md
                        git commit -m 'chore(metrics): update metrics after CI'
                        git push || true
                      fi

               # Schema validation (uses defaults set in the CLI: templates/schemas + winter_2025)
               - name: Validate content pack schemas
                 run: dart run tools/schema_validator/bin/validate_schemas.dart
